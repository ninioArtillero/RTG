-- Ejemplo tomados de
-- https://club.tidalcycles.org/t/working-with-tidal-state-values-tidal-can-count/2955

-- Nuevas funciones para permitir a los valores modificar un estado.
-- Tidal 1.7.2

-- En Tidal es dificil alinear eventos de dos patrones diferentes.
-- Por ejemplo, digamos que queremos alinear las primeras 5 letras con
-- los eventos de un ritmo euclidiano. Esto es, manipular por separado
-- la estructura y las notas.
-- Podríamos intentar, por ejemplo:
d1 $ slow 2 $ sound "alphabet(5,8)" # n "0 .. 4"

-- investigar función fix

:t fix

-- Ahora se puede crear un estado de valor llamado "valeria" para tomar
-- valores de una lista circular para cada evento:
d1 $ sound "alphabet(5,8)" # nTake "valeria" [0 .. 4]

-- Al modificarlo al vuelo, se espera a que la lista se vacie
-- antes de cambiar.
d1 $ sound "alphabet(5,8)" # nTake "valeria" [8]

-- Puede manejar listas infinitas, pero estás no se vaciaran nunca
-- (o por lo menos hasta el reinicio del intérprete).
-- En este caso, seguira repitiendo todo el álfabeto pues cada valor es tomado
-- en módulo.
d1 $ sound "alphabet(5,8)" # nTake "valeria" [0 ..]

-- Al detenerlo
hush

-- Y reiniciarlo, continuará desde el punto en que se quedo:
d1 $ sound "alphabet(5,8)" # nTake "valeria" [0 ..]

-- También está ahora la posibilidad de contar sin una lista.
-- Esta opción es equivalente a la línea anterior:
d1 $ sound "alphabet(5,8)" # nCount "rodrigo"

-- Este es el mismo estado nombrado que el utilizado por setF
-- para leer OSC/MIDI. De forma que se puede reiniciar el contador así:
setF "rodrigo" 0

-- O hacer que otro patrón lo use:
d2 $ sound "newnotes*16" # n "^rodrigo" # gain 1

-- También está 'nCountTo' para conteo modular:
d1 $ struct "t(7,12,3)" $
  sound "gretsch"
  # nCountTo "rafael" 5

-- El valor del módulo se puede establecer con un patrón
-- aunque esto creará un comportamiento inesperado desde un punto
-- de vista tidal-cyclesco. Esto se debe a que el contador corre independiente
-- al patrón:
d1 $ struct "t(7,12,3)" $
  sound "gretsch"
  # nCountTo "rachael" "<4 8>"

-- Similarmente, 'rev' no invertira el contador:

-- aquí las notas suben
d1 $ sound "newnotes(5,8)" # nCount "harold"

-- mientras la estructura es invertida, la notas siguen subiendo:
d1 $ rev $ sound "newnotes(5,8)" # nCount "harold"

-- se debe poder añadir 'Take' a cualquier control, y
-- Count / CountTo a cualquier control numérico.

-- Nota: estás funciones son inestables, los nombres pueden cambiar.
